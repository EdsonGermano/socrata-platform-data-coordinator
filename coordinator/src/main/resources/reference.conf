com.socrata.common {
  zookeeper {
    ensemble = "localhostl:2181"
    timeout = 40000
  }
}

com.socrata.backup {
  common {
    network {
      port = 40000
      max-packet-size = 1000000
    }
  }

  receiver = ${com.socrata.backup.common} {
    network {
      host = "0.0.0.0"
      reuse-address = true
      idle-timeout = 60000
      data-timeout = 60000
    }

    database {
      host = "localhost"
      port = 5432
      database = "robertm2"

      username = "blist"
      password = "blist"
    }
  }

  transmitter = ${com.socrata.backup.common} {
    network {
      host = "localhost"
      connect-timeout = 10000
      new-task-acknowledgement-timeout = 10000
    }

    database {
      host = "localhost"
      port = 5432
      database = "robertm"

      username = "blist"
      password = "blist"

      poll-interval = 20000
    }
  }
}

com.socrata.backup.receiver.database.url = "jdbc:postgresql://"${com.socrata.backup.receiver.database.host}":"${com.socrata.backup.receiver.database.port}"/"${com.socrata.backup.receiver.database.database}
com.socrata.backup.transmitter.database.url = "jdbc:postgresql://"${com.socrata.backup.transmitter.database.host}":"${com.socrata.backup.transmitter.database.port}"/"${com.socrata.backup.transmitter.database.database}

com.socrata.coordinator-service {
  zookeeper = ${com.socrata.common.zookeeper}
  network {
    port = 0
  }
  database {
    host = "localhost"
    port = 5432
    database = "robertm"
    username = "blist"
    password = "blist"
  }
  secondary {
    path = ${user.home}/secondary-stores
    configs {
    }
  }
}

