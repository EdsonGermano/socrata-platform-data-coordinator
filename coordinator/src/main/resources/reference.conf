com.socrata.coordinator.service {
  curator {
    session-timeout = 40s
    connect-timeout = 5s
    max-retries = 29
    base-retry-wait = 100ms
    max-retry-wait = 10s
    namespace = "com.socrata/soda"
  }
 
  log4j {
    rootLogger = [ INFO, console ]
    appender {
      console.class = org.apache.log4j.ConsoleAppender
      console.props {
        layout.class = org.apache.log4j.PatternLayout
        layout.props {
          ConversionPattern = "%d %p [%t] (%X{X-Socrata-RequestId}) [%X{X-Socrata-Resource}] %c{1} %m%n"
        }
      }
    }
  }

  liveness-check {
     ## Bind to address of the specific hostname or IP if specified, otherwise use wildcard. This should be set on
     ##  systems with multiple interfaces on the same network or you may risk sending responses from the wrong IP.
     #address = "localhost"
     ## Listen on port if specified, otherwise use ephemeral port.
     #port = 6021
   }

  secondary.path = ${user.home}/secondary-stores

  network.port = 6020

  service-advertisement {
    service-base-path = "/services"
    name = "data-coordinator"
  }

  command-read-limit = 10M
  allow-ddl-on-published-copies = false
  write-lock-timeout = 10 seconds
  # sleep between each log table cleanup to throttle the load it places on the db
  log-table-cleanup-sleep-time = 10 seconds
  # when we cleanup a log table, remove entries older than this
  log-table-cleanup-delete-older-than = 30 days
  # look at each log table every two weeks
  log-table-cleanup-delete-every = 14 days

  reports {
    directory = ${java.io.tmpdir}
    index-block-size = 64K
    data-block-size = 64K
  }

  metrics {
    # Should be unique for each service
    prefix = "com.socrata.data.coordinator"
    # log-metrics = true
    # enable-graphite = true
  }

  tablespace = nil

  database {
    app-name = "data-coordinator"
    database = truth
    c3p0 {
      maxPoolSize = 20
      idleConnectionTestPeriod = 60
      testConnectionOnCheckin = true
      preferredTestQuery = "SELECT 1"
      maxIdleTimeExcessConnections = 300
    }
  }
}
